---
// import WorkOrder from '@components/WorkOrder.astro';

import { QUERY_INVOICES, QUERY_WORKORDERS_STRING } from "@lib/graphql/queries";

import WorkOrder from "../components/WorkOrder";
import ModalWrapper from "@components/ModalWrapper.svelte";
import Test from "@components/Test.svelte";

import type { Invoice as InvoiceType } from "@lib/__generated__/graphql";
import InvoiceComponent from "@components/Invoice.svelte";

export const prerender = false;

const response = await fetch("http://localhost:5000/graphql", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify({
    query: QUERY_INVOICES,
  }),
});

const data = await response.json();

const invoices: InvoiceType[] = data.data.queryInvoices;

console.log("data", data);
---

<di>
  <table class="text-left border-collapse">
    <thead>
      <tr class="border-b border-black">
        <th>Invoices</th>
      </tr>
      <tr class="border-b border-black">
        <th class="text-start border border-black">Invoice No.</th>
        <th class="text-start border border-black">Date</th>
        <th class="text-start border border-black">Client</th>
        <th class="text-start border border-black">Total</th>
        <th class="text-start border border-black">Charged</th>
        <th class="text-start border border-black">Paid</th>
        <th class="text-start border border-black">Actions</th>
      </tr>
    </thead>

    <tbody>
      {
        invoices?.map((invoice: InvoiceType) => (
          <tr class="border-b border-black">
            <td class="py-1 px-3 border border-black">{invoice._id}</td>
            <td class="py-1 px-3 border border-black">{invoice.date}</td>
            <td class="py-1 px-3 border border-black">
              {invoice.customerId.firstName} {invoice.customerId.lastName}
            </td>
            <td class="py-1 px-3 border border-black">{invoice.total}</td>
            <td class="py-1 px-3 border border-black">{invoice.charged}</td>
            <td class="py-1 px-3 border border-black">{invoice.paid}</td>
            <td>
              <ModalWrapper client:load >
                <InvoiceComponent invoice={invoice} />
              </ModalWrapper>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</di>
