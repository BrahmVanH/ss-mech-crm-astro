---
// import WorkOrder from '@components/WorkOrder.astro';

import { QUERY_INVOICES, QUERY_WORKORDERS_STRING } from "@lib/graphql/queries";

import WorkOrder from "../components/WorkOrder";
import ModalWrapper from "@components/SvelteModalWrapper.svelte";
import Test from "@components/Test.svelte";

import type {
  Invoice as InvoiceType,
  Address,
} from "@lib/__generated__/graphql";
import InvoiceComponent from "@components/Invoice.svelte";
import Layout from "src/layouts/Layout.astro";

import tableData from "@lib/tableData.json";

export const prerender = false;

const response = await fetch("http://localhost:5000/graphql", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify({
    query: QUERY_INVOICES,
  }),
});

const data = await response.json();

const invoices: InvoiceType[] = data.data.queryInvoices;
if (!invoices) {
  console.log("No invoices found");
}
console.log(invoices);

console.log("data", data);
---

<Layout title="Invoices">
  <div class="text-white">
    <h1 class="text-3xl text-white mt-2 mb-2">Invoices</h1>
    <table class="text-left border-collaps">
      <thead>
        <tr class="border-b border-white ">
          {tableData.invoicesPage.tableHeaders.map((header) => (
            <th class="text-start border border-white">{header}</th>
          ))}
        </tr>
      </thead>

      <tbody>
        {
          invoices?.map((invoice: InvoiceType) => (
            <tr border-b border-white [&>td]:py-1 [&>td]:px-3 [&>td]:border [&>td]:border-white">
              <td>{invoice._id}</td>
              <td>{invoice.date}</td>
              <td>
                {invoice.customerId.firstName} {invoice.customerId.lastName}
              </td>
              <td>{invoice.total}</td>
              <td>{invoice.charged}</td>
              <td>{invoice.paid}</td>
              <td>
                <ModalWrapper client:load>
                  <InvoiceComponent client:load invoice={invoice} />
                </ModalWrapper>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</Layout>
